/*
 * Waterloo OpenData API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ImportantDateDetails : Details about terms, dates, and special notes for an Important Date



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ImportantDateDetails {
    /// Id link to associated Important Date, internal
    #[serde(rename = "importantDateId", skip_serializing_if = "Option::is_none")]
    pub important_date_id: Option<i32>,
    /// Id to the associated Term
    #[serde(rename = "termId", skip_serializing_if = "Option::is_none")]
    pub term_id: Option<i32>,
    /// Name of the associated Term when the Important Date takes place
    #[serde(rename = "termName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub term_name: Option<Option<String>>,
    /// Start or event date for the Important Date
    #[serde(rename = "startDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<Option<String>>,
    /// Optional end date for the Important Date
    #[serde(rename = "endDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<Option<String>>,
    /// Any special notes for this occurance of the Important Date, can contain markup
    #[serde(rename = "notes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub notes: Option<Option<String>>,
}

impl ImportantDateDetails {
    /// Details about terms, dates, and special notes for an Important Date
    pub fn new() -> ImportantDateDetails {
        ImportantDateDetails {
            important_date_id: None,
            term_id: None,
            term_name: None,
            start_date: None,
            end_date: None,
            notes: None,
        }
    }
}


