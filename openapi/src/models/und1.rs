/*
 * Waterloo OpenData API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Und1 {
    #[serde(rename = "fid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub fid: Option<Option<String>>,
    #[serde(rename = "uid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub uid: Option<Option<String>>,
    #[serde(rename = "filename", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub filename: Option<Option<String>>,
    #[serde(rename = "uri", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub uri: Option<Option<String>>,
    #[serde(rename = "filemime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub filemime: Option<Option<String>>,
    #[serde(rename = "filesize", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub filesize: Option<Option<String>>,
    #[serde(rename = "status", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub status: Option<Option<String>>,
    #[serde(rename = "timestamp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<Option<String>>,
    #[serde(rename = "uuid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<Option<String>>,
    #[serde(rename = "rdf_mapping", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rdf_mapping: Option<Option<Vec<serde_json::Value>>>,
    #[serde(rename = "focal_point", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub focal_point: Option<Option<String>>,
    #[serde(rename = "alt", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub alt: Option<Option<String>>,
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    #[serde(rename = "width", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub width: Option<Option<String>>,
    #[serde(rename = "height", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub height: Option<Option<String>>,
}

impl Und1 {
    pub fn new() -> Und1 {
        Und1 {
            fid: None,
            uid: None,
            filename: None,
            uri: None,
            filemime: None,
            filesize: None,
            status: None,
            timestamp: None,
            uuid: None,
            rdf_mapping: None,
            focal_point: None,
            alt: None,
            title: None,
            width: None,
            height: None,
        }
    }
}


