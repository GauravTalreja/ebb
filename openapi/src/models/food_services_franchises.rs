/*
 * Waterloo OpenData API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FoodServicesFranchises {
    #[serde(
        rename = "data",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub data: Option<Option<Vec<crate::models::FoodServicesFranchise>>>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "self", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<Box<crate::models::FoodServicesFranchisesSelf>>,
}

impl FoodServicesFranchises {
    pub fn new() -> FoodServicesFranchises {
        FoodServicesFranchises {
            data: None,
            count: None,
            param_self: None,
        }
    }
}
