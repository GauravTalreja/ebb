/*
 * Waterloo OpenData API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FoodServicesFranchise {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "self", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub param_self: Option<Option<String>>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "logo", skip_serializing_if = "Option::is_none")]
    pub logo: Option<Box<crate::models::Logo>>,
    #[serde(rename = "combos", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub combos: Option<Option<Vec<crate::models::Combo>>>,
    #[serde(rename = "individualitems", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub individualitems: Option<Option<Vec<crate::models::IndividualItem>>>,
    #[serde(rename = "addons", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub addons: Option<Option<Vec<crate::models::Addon>>>,
}

impl FoodServicesFranchise {
    pub fn new() -> FoodServicesFranchise {
        FoodServicesFranchise {
            id: None,
            param_self: None,
            name: None,
            logo: None,
            combos: None,
            individualitems: None,
            addons: None,
        }
    }
}


