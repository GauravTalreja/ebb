/*
 * Waterloo OpenData API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SiteNews : Model representing News data associated to a Site in the WCMS



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SiteNews {
    /// Unique, numeric site ID of the Site this news originates from
    #[serde(rename = "siteId", skip_serializing_if = "Option::is_none")]
    pub site_id: Option<i32>,
    /// Unique Id of this news item
    #[serde(rename = "uniqueKey", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub unique_key: Option<Option<String>>,
    /// Title of the news item
    #[serde(rename = "title", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub title: Option<Option<String>>,
    /// Content created or posted date
    #[serde(rename = "postedDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub posted_date: Option<Option<String>>,
    /// Content updated date
    #[serde(rename = "updatedDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub updated_date: Option<Option<String>>,
    /// URI to the news item in WCMS
    #[serde(rename = "itemUri", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub item_uri: Option<Option<String>>,
    /// Intended audience tag(s)
    #[serde(rename = "audience", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub audience: Option<Option<String>>,
    /// News item content, often with HTML markup
    #[serde(rename = "content", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub content: Option<Option<String>>,
}

impl SiteNews {
    /// Model representing News data associated to a Site in the WCMS
    pub fn new() -> SiteNews {
        SiteNews {
            site_id: None,
            unique_key: None,
            title: None,
            posted_date: None,
            updated_date: None,
            item_uri: None,
            audience: None,
            content: None,
        }
    }
}


