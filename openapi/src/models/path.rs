/*
 * Waterloo OpenData API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Path {
    #[serde(
        rename = "pid",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub pid: Option<Option<String>>,
    #[serde(
        rename = "source",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub source: Option<Option<String>>,
    #[serde(
        rename = "alias",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub alias: Option<Option<String>>,
    #[serde(
        rename = "language",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub language: Option<Option<String>>,
    #[serde(
        rename = "pathauto",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub pathauto: Option<Option<String>>,
}

impl Path {
    pub fn new() -> Path {
        Path {
            pid: None,
            source: None,
            alias: None,
            language: None,
            pathauto: None,
        }
    }
}
